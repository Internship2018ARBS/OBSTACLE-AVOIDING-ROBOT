#include <Servo.h>
Servo servo;
long previousMillis = 0;
 long interval = 2000; 
int marginleft,marginright; //sensor angles
int distance=0;//ultrasonic sensor
long duration;//ultrasonic sensor

//Motor A
const int motorPin1  =11;  // Pin 14 of L293
const int motorPin2  = 10;  // Pin 10 of L293
//Motor B
const int motorPin3  = 6; // Pin  7 of L293
const int motorPin4  = 5;  // Pin  2 of L293

const int trigPin = 7;// defines variables ultrasonic sensor
const int echoPinleft = 12;// defines variables ultrasonic sensor
const int echoPinright = 13;// defines variables ultrasonic sensor

void setup(){
    Serial.begin(9600); //Start serial communication boud rate at 9600
    pinMode(2,INPUT); //Pin 2 as signal input for sensor
  
    //Set pins as outputs for motor
    pinMode(motorPin1, OUTPUT);
    pinMode(motorPin2, OUTPUT);
    pinMode(motorPin3, OUTPUT);
    pinMode(motorPin4, OUTPUT);
  
    pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
    pinMode(echoPinleft, INPUT); // Sets the echoPin as an Input for left sensor
    pinMode(echoPinright, INPUT); // Sets the echoPin as an Input for right sensor
 
    servo.attach(4);//pin for servomotor
    servo.write(90);//angle for servomotor
    delay(1000);
} //////////// SETUP

void loop(){
    forward();
    if(digitalRead(2)==LOW)  { //pin 2 for sensor
      // If no signal print collision detected
      stopmotor();//stop motor if object detected 
      Serial.println("Collision Detected 90 degrees.");
      scanare(); 
    }
    else{
         unsigned long currentMillis = millis();//save the current time
      if(currentMillis - previousMillis >= interval) {//if 2 seconds have passsed check the surrounding
   

    previousMillis = currentMillis; //the current time becomes the previous in order to have 2 seconds fo every loop
    slowdown();//slow down the motor in order to check the surrounging
    
       for(int i=94;i<=140;i+=8){//loop for servomotor
        Serial.println("primul for");
      Serial.println("Position: ");
      Serial.println(i);
      servo.write(i);
      delay(75);
      if(digitalRead(2)==LOW){
       servo.write(90);
      stopmotor();
      delay(100);
        redirectleft();//redirect the path of the robot
      delay(100);
      forward();
      
      break;    
      }
       servo.write(90);
       } 
     
         for(int i=94;i>=40;i-=8){//loop for servomotor
          Serial.println("al doilea for");
      Serial.println("Position: ");
      Serial.println(i);
      servo.write(i);
      delay(75);
      if(digitalRead(2)==LOW){
    servo.write(90);
      stopmotor();
      delay(100);
        redirectright();//redirect the path of the robot
      delay(100);
      forward();
    
      break;
      }
       servo.write(90);
       } 
       

      } 
    }
}
////////////////////////// LOOP
 
void scanare(){
    delay(200);

    //loop for finding the position where the marginleft of the object is by searching form the middle of the car to the left
    for(int i=98;i<=180;i+=4){
      Serial.println("Position: ");
      Serial.println(i);
      servo.write(i);
      delay(55);
  
      if(digitalRead(2)==HIGH){
        marginleft=i-90;//found the position and store it in a variable
        i=180;//end the loop if we found where the obstacle ends     
      }
    } /// scan the right part of the object

    delay(100);
  
    //loop for finding the position where the marginright of the object is by searching form the middle of the car to the left
    for(int i=98;i>=0;i-=4){
      Serial.println("Position: ");
      Serial.println(i);
      servo.write(i);
      delay(55);
    
      if(digitalRead(2)==HIGH){
        marginright=90-i;//found the position and store it in a variable
        i=0;//end the loop if we found where the obstacle ends
      }
    } /// scan the left part of the object

    delay(500);

    servo.write(90);//reposition the sensor in the midlle position
    Serial.println("End of obstacle right");
    Serial.println(marginright);
    Serial.println("End of obstacle left");
    Serial.println(marginleft);

    
     if(marginright > marginleft){
      
      turnleft();
      forward();
      //if the distance to left is smaller we will turn left and then go straight
   //   check_right();//check if went past the object
       
    }
    else{
      turnright(); 
      forward();
      //if the distance to left is smaller we will turn right and then go straight
     // check_left();//check if went past the object
    }
    
}
/////////////////////////////// scanare

void backward(){

    analogWrite(motorPin1, 0);
    analogWrite(motorPin2, 100);
    analogWrite(motorPin3, 0);
    analogWrite(motorPin4, 100);
}
/////////////////////////////// backward

void forward(){
   analogWrite(motorPin1, 100);
   analogWrite(motorPin2, 0);
   analogWrite(motorPin3, 100);
   analogWrite(motorPin4, 0);
    
}

 /////////////////////////////// forward

void turnleft(){
      analogWrite(motorPin1,55);
      analogWrite(motorPin2, 0);
      analogWrite(motorPin3, 0);
      analogWrite(motorPin4, 55);
      delay(300);
   
      
      
     while((distance<1)or(distance>30)){   //do this loop as long as we didnt exceed the object
      // Clears the trigPin
      analogWrite(motorPin1,65);
      analogWrite(motorPin2, 0);
      analogWrite(motorPin3, 0);
      analogWrite(motorPin4, 65);
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);

      // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(echoPinleft, HIGH);
      // Calculating the distance
      distance= duration*0.034/2;
      delay(20);
      // Prints the distance on the Serial Monitor
      Serial.print("Distance left: ");
      Serial.println(distance);
     }
   
    stopmotor();  
    distance=0;//reset te variable distance
        
    delay(2000);

    
 }
 ////////////////////////////// turn left
  
void turnright(){
   analogWrite(motorPin1, 0);
   analogWrite(motorPin2, 65);
   analogWrite(motorPin3, 65);
   analogWrite(motorPin4, 0);
        delay(300);
   
   
   while((distance<1)or(distance>30)){   //do this loop as long as we didnt exceed the object
      // Clears the trigPin
   analogWrite(motorPin1, 0);
   analogWrite(motorPin2, 65);
   analogWrite(motorPin3, 65);
   analogWrite(motorPin4, 0);
         
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);

      // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(echoPinright, HIGH);
      // Calculating the distance
      distance= duration*0.034/2;
      delay(20);
      // Prints the distance on the Serial Monitor
      Serial.print("Distance left: ");
      Serial.println(distance);
     }
   
    stopmotor();  
    distance=0;//reset te variable distance
        
    delay(2000);
 }
/////////////////////////////// turn right

void check_right(){
    while((distance<1)or(distance>30)){   //do this loop as long as we didnt exceed the object
      // Clears the trigPin
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);

      // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(echoPinleft, HIGH);
      // Calculating the distance
      distance= duration*0.034/2;
      delay(20);
      // Prints the distance on the Serial Monitor
      Serial.print("Distance left: ");
      Serial.println(distance);
    }

    stopmotor();
    delay(2000);//wait 2 sec
    distance=0;//reset te variable distance
}
////////////////////////////// check left - check the left part after turning right

void check_left(){
    while((distance<1)or(distance>30)){ //do this loop as long as we didnt exceed the object
      // Clears the trigPin
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);

      // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(echoPinright, HIGH);
      // Calculating the distance
      distance= duration*0.034/2;
      delay(20);
      // Prints the distance on the Serial Monitor
      Serial.print("Distance right: ");
      Serial.println(distance);
   }
   stopmotor();
   delay(2000);//wait 2 sec 
   distance=0;//reset te variable distance
}
////////////////////////////////// check right - check the right side after turning left

void stopmotor(){
    analogWrite(motorPin1, 0);
    analogWrite(motorPin2, 0);
    analogWrite(motorPin3, 0);
    analogWrite(motorPin4, 0);
    
}
///////////////////////////////// stop motor

void slowdown(){
  analogWrite(motorPin1, 30);
   analogWrite(motorPin2, 0);
   analogWrite(motorPin3, 30);
   analogWrite(motorPin4, 0);
  
}
void redirectleft(){
    analogWrite(motorPin1,95);
   analogWrite(motorPin2, 0);
   analogWrite(motorPin3, 0);
   analogWrite(motorPin4, 0);
}

void redirectright(){
    analogWrite(motorPin1, 0);
   analogWrite(motorPin2, 0);
   analogWrite(motorPin3, 95);
   analogWrite(motorPin4, 0);
  
}
